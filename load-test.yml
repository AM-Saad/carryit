config:
  target: "http://localhost:8000"
  phases:
     - duration: 300
       arrivalRate: 50
  engines:
    socketio-v3: {}
scenarios:
  - name: First Scenario
    engine: socketio-v3
    flow:
      - get:
          url: "/socket.io/"
          match:
            json: $.message
            value: Transport unknown
      - emit: ["register", "shp-1"]
        namespace: /tracking
        response:
          on: go
          args: ["shp-1"]
      - emit: ["move", "shp-1", {'id': "shp-1", 'coords':{lat: 1, lng: 1}}]
        namespace: /tracking
        response:
          on: move
          args:
            - shp-1
            - coords:
                lat: 1
                lng: 1
          match:
            - json: "$.0"
              value: "shp-1"
            - json: "$.1"
              value: "Hello everyone!"
      # Test backwards compatability of the `channel` and `data` options
      # - emit:
      #     channel: join
      #     data: private-room
      #   response:
      #     channel: joined
      #     data: Welcome to private-room
      # # Attempt to join channel in secured namespaced without logging in
      # - emit: [ "join", "lobby" ]
      #   reconnect: true
      #   namespace: /secured
      #   acknowledge:
      #     args: false
      # # Login to the secured namespace and capture the token in the response
      # - emit: [ "login", { username: "setup", password: "setup" } ]
      #   namespace: /secured
      #   response:
      #     on: success
      #     capture:
      #       json: "$.token"
      #       as: "token"
      # # Configure the token as a http header
      # - function: "setToken"
      # # Connecting to secured after a successful login should work
      # - emit: [ "join", "lobby" ]
      #   reconnect: true
      #   namespace: /secured
      #   response:
      #     on: joined
      #     args:
      #       - Welcome to secured channel lobby